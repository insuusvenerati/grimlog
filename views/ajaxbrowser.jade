extends layout


block content
    script.
        var frm = null, fstart = null, flimit = null;
        var g_hasMore = true;
            
        function onContentLoaded(hasMore, baseDate, rowCount, start, firstTS) {
            g_hasMore = hasMore;
            console.log('has more:', g_hasMore, 'r:', rowCount, baseDate);
            var cp = $('#curPosition');
            cp.text('' + start  + ' - ' + (start + rowCount));
            if (!hasMore) {
                $('#nextPage').addClass('btn_disabled');
            } else {
                $('#nextPage').removeClass('btn_disabled');
            };
            if (parseInt(fstart.val()) <= 0) {
                $('#prevPage').addClass('btn_disabled');
            } else {
                $('#prevPage').removeClass('btn_disabled');
            };
            if (!isNaN(firstTS)) {
                var sec = (firstTS % 60000) / 1000;
                var min = (firstTS % 60 * 60000) / 60000;
                var hr = (firstTS % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000);
                $('#ss').val(Math.floor(sec));
                $('#mm').val(Math.floor(min));
                $('#hh').val(Math.floor(hr));
            };
            $('table.log_table tr td a').click(function(ev) {
                var a = ev.target;
                var m = a.text.match(/^T(\d+)/);
                if (m != null && parseInt(m[1]) > 0) {
                    var f = frm.find('input[name=threadid]');
                    f.val(m[1]);
                    doSearch();
                    return;
                };
                m = a.text.match(/^P(\d+)/);
                if (m != null && parseInt(m[1]) > 0) {
                    var f = frm.find('input[name=pid]');
                    f.val(m[1]);
                    doSearch();
                    return;
                };
            });
        };
        
        function doSearch() {
            fstart.val(0);
            frm.submit();
        }
        
        function nextPage() {
            if (g_hasMore == false) return;
            console.log('more!', typeof(g_hasMore), g_hasMore);
            fstart.val(parseInt(fstart.val()) + parseInt(flimit.val()));
            console.log('start: ', fstart.val(), 'limit:', flimit.val());
            frm.submit();
        };
        
        function prevPage() {
            var c = parseInt(fstart.val());
            if (c <= 0) return;
            c -= parseInt(flimit.val());
            if (c < 0) c = 0;
            fstart.val(c);
            console.log('start: ', fstart.val(), 'limit:', flimit.val());
            frm.submit();
        };
        
        function zeroPage() {
            fstart.val(0);
        };    
        
        $(document).ready(function() {
            $('[data-toggle=offcanvas]').click(function() {
                $('.row-offcanvas').toggleClass('active');
            });
            
            frm = $('#searchForm');
            fstart = frm.find('input[name=start]');
            flimit = frm.find('input[name=limit]');
        
           
           frm.submit(function(ev) {
                console.log('form submit');
                $.ajax({
                    type: frm.attr('method'),
                    url: frm.attr('action'),
                    data: frm.serialize(),
                    success: function (data) {
                        var lc = $('#logContent');
                        lc.html(data);
                        var hasMore = lc.find('input[name=hasMore]').val() == "true";
                        var baseDate = parseInt(lc.find('input[name=baseDate]').val());
                        var count = parseInt(lc.find('input[name=count]').val());
                        var start = parseInt(lc.find('input[name=start]').val());
                        var fts = parseInt(lc.find('input[name=firstTS]').val());
                        onContentLoaded(hasMore, baseDate, count, start, fts);
                    }
                });
                ev.preventDefault();
           });
           
           $('#prevPage').click(prevPage);
           
           $('#nextPage').click(nextPage);
           $('#btn_search').click(doSearch);
           frm.submit();//load initial data
        });
        
    div(class='navbar navbar-inverse navbar-fixed-top')
        div(class='navbar-header')
            button(type='button', class='navbar-toggle', data-toggle='collapse', data-target='.navbar-collapse')
                span.icon-bar
                span.icon-bar
                span.icon-bar
            div.navbar-left
                p.visible-xs
                    button(type='button', class='btn btn-primary ' data-toggle='offcanvas')
                        i(class='glyphicon glyphicon-chevron-left')
                
                ul.pagination
                    li
                        a(href='#' id='prevPage' aria-label='Prev')
                            span(aria-hidden='true') &laquo;
                    li
                        a(href='#') 
                            span(aria-hidden='true' id='curPosition') 
                    li
                        a(href='#' id='nextPage' aria-label='Next')
                            span(aria-hidden='true') &raquo;
                 
                  
    div(class='row-offcanvas row-offcanvas-left')
        div(id='sidebar' class='sidebar-offcanvas')
            div(class='col-md-12')
                span &nbsp;
                form(id='searchForm' method='GET' action='/logs/query/' + fileId)
                    input(type='hidden' name='start' value=(isNaN(query.start) ? 0 : query.start))
                    input(type='hidden' name='limit' value=(isNaN(query.limit) ? 100 : query.limit))
                    div.form-group
                        label(for='dir') Sort dir
                        select(id='dir' name='dir' class='form-control')
                            option(value='asc') Oldest first
                            option(value='desc') Newest first
                    div.form-group
                        label(for='level') Level
                        select(id='level' name='level' class='form-control')
                            option 
                            option Trace
                            option Debug
                            option Info
                            option Warn
                            option Error
                    div.form-group
                        label(for='source') Source name
                        input(type='text' class='form-control' id='source' name='source' value=query.source)
                    div.form-group
                        label(for='send_addr') Origin address
                        input(type='text' class='form-control' id='send_addr' name='send_addr' value=query.send_addr)
                    div.form-group
                        label(for='') Log name
                        input(type='text' class='form-control' id='logname' name='logname' value=query.logname)
                    div.form-group
                        label(for='pid') PID 
                        input(type='number' class='form-control' id='pid' name='pid' value=query.pid)
                    div.form-group
                        label(for='threadid') Thread ID 
                        input(type='number' class='form-control' id='threadid' name='threadid' value=query.threadid)
                    div.form-group
                        label(for='') Start time
                        div(class='form-group row time_field')
                            div.col-md-3
                                input(type='number' class='form-control timepick_field' name='hh' id='hh' value=query.hh)
                            div.col-md-3
                                input(type='number' class='form-control timepick_field' name='mm' id='mm' value=query.mm)
                            div.col-md-3
                                input(type='number' class='form-control timepick_field' name='ss' id='ss' value=query.ss)
                    div.form-group
                        label(for='text') Correlation id
                        input(type='text' class='form-control' id='correlation' name='correlation' value=query.correlation)
                    div.form-group
                        label(for='text') Message text
                        input(type='text' class='form-control' id='text' name='text' value=query.text)
                    div.form-group
                        button(class='btn btn-primary' type='button' id='btn_search') Search
                        span &nbsp;
                        button(class='btn' type='button' id='btn_reset') Reset
        div(id='main')
            div(class='col-md-12 logContent' id='logContent')
                
                    
                        